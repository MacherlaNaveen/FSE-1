#spring.data.mongodb.database=moviedb
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017



spring.datasource.url=jdbc:mysql://localhost:3306/authdb
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
## MySQL Connection Properties
#spring.datasource.url=jdbc:mysql:
#spring.datasource.username=
#spring.datasource.password=
#spring.sql.init.platform=mysql
#spring.jpa.show-sql:true

#
### JPA Properties
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=update
#
## JPA Properties
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.ddl-auto=update

server.port = 8083 
#swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html
#for authorization microservice call
auth.service.url = http://localhost:8080/api/v1.0/auth
server.error.include-message=always
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#for test
logging.level.org.apache.kafka.clients.NetworkClient=error
# output to a file--for logstash
logging.file.name=application-logs/application.log

#kafka configuration
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

spring.kafka.topic.name=movieapp